services:
  rocket-base:
    build:
      context: .
      dockerfile: 1_rocket-base/Dockerfile
    image: ciechanowiec/rocket-base:${ROCKET_FEATURE_ARTIFACT_VERSION}
    container_name: rocket-base
    hostname: rocket-base
    networks:
      - rocket-network

  rocket-instance:
    build:
      context: .
      dockerfile: 2_rocket-instance/Dockerfile
      args:
        SLING_DIR: /opt/sling
        # comma-separated, like: basic,sling
        RUN_MODES:
        # On multi-version support: https://sling.apache.org/documentation/bundles/osgi-installer.html#multi-version-support-1
        ENABLE_MULTI_VERSION_SUPPORT: false
        HTTP_PORT: 8080
        # Leave the debug port empty to disable debugging mode:
        JAVA_DEBUG_PORT: 8081
        EXTRA_JAVA_OPTS:
        ROCKET_FEATURE_ARTIFACT_FINAL_NAME: ${ROCKET_FEATURE_ARTIFACT_ID}-${ROCKET_FEATURE_ARTIFACT_VERSION}-oak_tar.far
    environment:
      SLING_DIR: /opt/sling
      # comma-separated, like: basic,sling
      RUN_MODES:
      # On multi-version support: https://sling.apache.org/documentation/bundles/osgi-installer.html#multi-version-support-1
      ENABLE_MULTI_VERSION_SUPPORT: false
      HTTP_PORT: 8080
      # Leave the debug port empty to disable debugging mode:
      JAVA_DEBUG_PORT: 8081
      EXTRA_JAVA_OPTS:
    image: ciechanowiec/rocket-instance:${ROCKET_FEATURE_ARTIFACT_VERSION}
    container_name: rocket-instance
    volumes:
      - type: volume
        source: rocket-data
        target: /opt/sling/launcher/repository/segmentstore
    # Grace period should be long enough so that the JCR is closed correctly and doesn't get corrupted:
    stop_grace_period: 300s
    hostname: rocket-instance
    networks:
      - rocket-network
    ports:
      - target: 8080
        published: 8080
        protocol: tcp
        mode: host
      - target: 8081
        published: 8081
        protocol: tcp
        mode: host
    labels:
      - "docker-volume-backup.stop-during-backup=false"
    depends_on:
      - rocket-base

  rocket-nginx:
    build:
      context: .
      dockerfile: 3_rocket-nginx/Dockerfile
    environment:
      DOMAIN: ciechanowiec.hopto.org
      EMAIL: herman@ciechanowiec.eu
      IS_STAGING_ENV: true
    image: ciechanowiec/rocket-nginx:${ROCKET_FEATURE_ARTIFACT_VERSION}
    container_name: rocket-nginx
    hostname: rocket-nginx
    networks:
      - rocket-network
    ports:
      - target: 80
        published: 80
        protocol: tcp
        mode: host
      - target: 443
        published: 443
        protocol: tcp
        mode: host
    depends_on:
      - rocket-base

volumes:
  rocket-data:
    name: "rocket-data"

networks:
  rocket-network:
    driver: bridge
    # This name is required to avoid name prefixing by Docker:
    name: rocket-network
